name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build-and-test:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            triplet: x64-linux
            build_type: Release
          - os: ubuntu-latest
            triplet: x64-linux
            build_type: Debug
          - os: windows-latest
            triplet: x64-windows
            build_type: Release
          - os: windows-latest
            triplet: x64-windows
            build_type: Debug
          - os: macos-latest
            triplet: x64-osx
            build_type: Release
          - os: macos-latest
            triplet: x64-osx
            build_type: Debug

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup vcpkg (using git clone)
      run: |
        git clone https://github.com/Microsoft/vcpkg.git ${{ github.workspace }}/vcpkg
        cd ${{ github.workspace }}/vcpkg
        git checkout master

    - name: Bootstrap vcpkg (Windows)
      if: runner.os == 'Windows'
      run: |
        cd ${{ github.workspace }}/vcpkg
        .\bootstrap-vcpkg.bat
      shell: pwsh

    - name: Bootstrap vcpkg (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        cd ${{ github.workspace }}/vcpkg
        ./bootstrap-vcpkg.sh

    - name: Install vcpkg dependencies
      run: |
        ${{ github.workspace }}/vcpkg/vcpkg install boost-beast openssl nlohmann-json gtest --triplet ${{ matrix.triplet }}

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}

    - name: Run Tests
      working-directory: build
      run: ctest -C ${{ matrix.build_type }} --output-on-failure
